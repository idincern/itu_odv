recovery_behaviour_enabled: true

TebLocalPlannerROS:
 odom_topic: odom   
 map_frame: map
 # Trajectory
 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.1
 max_samples: 500
 global_plan_overwrite_orientation: True
 allow_init_with_backwards_motion: True
 max_global_plan_lookahead_dist: 5.0
 global_plan_viapoint_sep: 0.2
 global_plan_prune_distance: 1
 exact_arc_length: False
 feasibility_check_no_poses: 5
 publish_feedback: True 
 
 # Robot      
 max_vel_x: 0.6
 max_vel_x_backwards: 0.6
 max_vel_y: 0.6
 max_vel_theta: 0.22
 acc_lim_x: 0.3
 acc_lim_y: 0.3
 acc_lim_theta: 0.11
 min_turning_radius: 0.0 # omni-drive robot (can turn on place!)
 footprint_model:
   type: "polygon"
   vertices: [[-0.33, -0.33], [-0.33, 0.33], [0.33, 0.33], [0.33, -0.33]]
   
 # GoalTolerance
 xy_goal_tolerance: 0.12
 yaw_goal_tolerance: 0.12
 free_goal_vel: False
 complete_global_plan: True
 
 # Obstacles
 min_obstacle_dist: 0.11 # This value must also include our robot radius, since footprint_model is set to "point".
 inflation_dist: 0.11 
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 0.2
 obstacle_poses_affected: 20
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5
 include_dynamic_obstacles: True # eklendi 
 dynamic_obstacle_inflation_dist: 0.1

 # Optimization
    
 no_inner_iterations: 5
 no_outer_iterations: 4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.15
 obstacle_cost_exponent: 3
 weight_max_vel_x: 3
 weight_max_vel_y: 2
 weight_max_vel_theta: 1
 weight_acc_lim_x: 3
 weight_acc_lim_y: 2
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1 # WE HAVE A HOLONOMIC ROBOT, JUST ADD A SMALL PENALTY
 weight_kinematics_forward_drive: 10
 weight_kinematics_turning_radius: 10
 weight_optimaltime: 1 # must be > 0
 weight_shortest_path: 1
 weight_obstacle: 50
 weight_inflation: 0.1
 weight_dynamic_obstacle: 10
 weight_viapoint: 1
 weight_adapt_factor: 2

